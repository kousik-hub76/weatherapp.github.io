{"version":3,"sources":["components/DisplayWeather.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayWeather","props","weatherData","location","temperature","description","region","country","wind_speed","pressure","precip","humidity","img","className","src","alt","Navbar","onSubmit","e","changeweather","placeholder","onChange","changeRegion","target","value","App","state","coords","latitude","longitude","data","inputData","change","setState","event","preventDefault","Axios","get","then","res","name","current","weather_descriptions","weather_icons","navigator","geolocation","getCurrentPosition","position","newCoords","console","log","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f618cd14.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function DisplayWeather(props){\r\n    const {location,temperature,description,region,country,wind_speed,pressure,precip,humidity,img }=props.weatherData;\r\n    return(\r\n        <div className=\"user-weather\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-temp\">\r\n                    <h1>{temperature}<sup>o</sup>C , {description}</h1>\r\n                    <h4>{location}</h4>\r\n                    <p>{region} , {country}</p>\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                    <img className=\"mainImg\" src={img} alt=\"weather-img\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Wind Speed</b>(km/hr)</p>\r\n                    <h2>{wind_speed}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Preassure</b>(millibar)</p>\r\n                    <h2>{pressure}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Precipitation</b>(mm)</p>\r\n                    <h2>{precip}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Humidity</b>(%)</p>\r\n                    <h2>{humidity}</h2>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <h1 className=\"title\">Weather-app</h1>\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n                <form className=\"region\" onSubmit={(e)=>props.changeweather(e)}>\r\n                    <input className=\"regioninput\" placeholder=\"Enter your location\" onChange={(e)=>\r\n                        props.changeRegion(e.target.value)\r\n                    }/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport Axios from 'axios';\nimport  DisplayWeather from './components/DisplayWeather.js';\nimport Navbar from './components/Navbar';\nclass App extends React.Component{\n\n  //state\n  state={\n    coords:{\n      latitude:45,\n      longitude:60\n    },\n    data: {},\n    inputData:\"\"\n  }\n\n  componentDidMount(){\n    //get the device location\n      if(navigator.geolocation){\n          navigator.geolocation.getCurrentPosition((position)=>{\n            //console.log(position.coords.longitude);\n            let newCoords={\n              latitude:position.coords.latitude,\n              longitude:position.coords.longitude\n            }\n\n            this.setState({coords:newCoords});\n\n            //Api call\n            Axios.get(`http://api.weatherstack.com/current?access_key=ecb203ba349300b40927e041cc1ccda2&query=${this.state.coords.latitude},${this.state.coords.longitude}`).then(res => {\n              \n              let weatherData={\n                location:res.data.location.name,\n                temperature:res.data.current.temperature,\n                description:res.data.current.weather_descriptions[0],\n                region:res.data.location.region,\n                country:res.data.location.country,\n                wind_speed:res.data.current.wind_speed,\n                pressure:res.data.current.pressure,\n                precip:res.data.current.precip,\n                humidity:res.data.current.humidity,\n                img:res.data.current.weather_icons\n\n              }\n              this.setState({data:weatherData});\n\n            })\n\n          })\n      }else{\n          console.log(\"not Supported\")\n      }\n  }\n  //track the input field\n  change=(value)=>{\n    this.setState({inputData:value})\n  }\n\n  changeweather=(event)=>{\n    event.preventDefault();\n\n    //api call\n    Axios.get(`http://api.weatherstack.com/current?access_key=ecb203ba349300b40927e041cc1ccda2&query=${this.state.inputData}`).then(res=>{\n\n      let weatherData={\n        location:res.data.location.name,\n        temperature:res.data.current.temperature,\n        description:res.data.current.weather_descriptions[0],\n        region:res.data.location.region,\n        country:res.data.location.country,\n        wind_speed:res.data.current.wind_speed,\n        pressure:res.data.current.pressure,\n        precip:res.data.current.precip,\n        humidity:res.data.current.humidity,\n        img:res.data.current.weather_icons\n\n      }\n      this.setState({data:weatherData});\n    })\n    \n  }\n  render(){\n      return(\n          <div className=\"App\">\n            <div className=\"container\">\n              <Navbar changeweather={this.changeweather} changeRegion={this.change} />\n              <DisplayWeather weatherData={this.state.data}/>\n              </div>\n          </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}